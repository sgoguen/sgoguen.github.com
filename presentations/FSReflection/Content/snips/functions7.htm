<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"> 
<html xmlns="http://www.w3.org/1999/xhtml">
<head><link rel="stylesheet" type="text/css" href="style.css" />
<script type="text/javascript" src="tips.js"></script></head><body>
<pre class="fssnip">
<span class="l"> 1: </span><span class="k">open</span> <span onmouseout="hideTip(event, 'fstips1', 1)" onmouseover="showTip(event, 'fstips1', 1)" class="i">System</span>
<span class="l"> 2: </span><span class="k">open</span> <span onmouseout="hideTip(event, 'fstips1', 2)" onmouseover="showTip(event, 'fstips1', 2)" class="i">System</span><span class="o">.</span><span onmouseout="hideTip(event, 'fstips2', 3)" onmouseover="showTip(event, 'fstips2', 3)" class="i">Text</span>
<span class="l"> 3: </span>
<span class="l"> 4: </span><span class="k">module</span> <span onmouseout="hideTip(event, 'fstips3', 4)" onmouseover="showTip(event, 'fstips3', 4)" class="i">Seq</span> <span class="o">=</span>
<span class="l"> 5: </span>  <span class="k">let</span> <span onmouseout="hideTip(event, 'fstips4', 5)" onmouseover="showTip(event, 'fstips4', 5)" class="i">fold</span> <span onmouseout="hideTip(event, 'fstips5', 6)" onmouseover="showTip(event, 'fstips5', 6)" class="i">foldingFunction</span> <span onmouseout="hideTip(event, 'fstips6', 7)" onmouseover="showTip(event, 'fstips6', 7)" class="i">initialResult</span> <span onmouseout="hideTip(event, 'fstips7', 8)" onmouseover="showTip(event, 'fstips7', 8)" class="i">list</span> <span class="o">=</span>
<span class="l"> 6: </span>    <span class="k">let</span> <span class="k">mutable</span> <span onmouseout="hideTip(event, 'fstips8', 9)" onmouseover="showTip(event, 'fstips8', 9)" class="i">result</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fstips6', 10)" onmouseover="showTip(event, 'fstips6', 10)" class="i">initialResult</span>
<span class="l"> 7: </span>    <span class="k">for</span> <span onmouseout="hideTip(event, 'fstips9', 11)" onmouseover="showTip(event, 'fstips9', 11)" class="i">item</span> <span class="k">in</span> <span onmouseout="hideTip(event, 'fstips7', 12)" onmouseover="showTip(event, 'fstips7', 12)" class="i">list</span> <span class="k">do</span>
<span class="l"> 8: </span>      <span onmouseout="hideTip(event, 'fstips8', 13)" onmouseover="showTip(event, 'fstips8', 13)" class="i">result</span> <span class="o">&lt;-</span> <span onmouseout="hideTip(event, 'fstips5', 14)" onmouseover="showTip(event, 'fstips5', 14)" class="i">foldingFunction</span> <span onmouseout="hideTip(event, 'fstips8', 15)" onmouseover="showTip(event, 'fstips8', 15)" class="i">result</span> <span onmouseout="hideTip(event, 'fstips9', 16)" onmouseover="showTip(event, 'fstips9', 16)" class="i">item</span>
<span class="l"> 9: </span>    <span onmouseout="hideTip(event, 'fstips8', 17)" onmouseover="showTip(event, 'fstips8', 17)" class="i">result</span>
<span class="l">10: </span>
<span class="l">11: </span><span class="k">let</span> <span onmouseout="hideTip(event, 'fstips10', 18)" onmouseover="showTip(event, 'fstips10', 18)" class="i">add</span> <span onmouseout="hideTip(event, 'fstips11', 19)" onmouseover="showTip(event, 'fstips11', 19)" class="i">x</span> <span onmouseout="hideTip(event, 'fstips12', 20)" onmouseover="showTip(event, 'fstips12', 20)" class="i">y</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fstips11', 21)" onmouseover="showTip(event, 'fstips11', 21)" class="i">x</span> <span class="o">+</span> <span onmouseout="hideTip(event, 'fstips12', 22)" onmouseover="showTip(event, 'fstips12', 22)" class="i">y</span>
<span class="l">12: </span><span class="k">let</span> <span onmouseout="hideTip(event, 'fstips13', 23)" onmouseover="showTip(event, 'fstips13', 23)" class="i">sum</span> <span onmouseout="hideTip(event, 'fstips14', 24)" onmouseover="showTip(event, 'fstips14', 24)" class="i">list</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fstips15', 25)" onmouseover="showTip(event, 'fstips15', 25)" class="i">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fstips16', 26)" onmouseover="showTip(event, 'fstips16', 26)" class="i">fold</span> <span onmouseout="hideTip(event, 'fstips10', 27)" onmouseover="showTip(event, 'fstips10', 27)" class="i">add</span> <span class="n">0</span> <span onmouseout="hideTip(event, 'fstips14', 28)" onmouseover="showTip(event, 'fstips14', 28)" class="i">list</span>
<span class="l">13: </span>
<span class="l">14: </span><span class="k">let</span> <span onmouseout="hideTip(event, 'fstips17', 29)" onmouseover="showTip(event, 'fstips17', 29)" class="i">SBCat</span> (<span onmouseout="hideTip(event, 'fstips18', 30)" onmouseover="showTip(event, 'fstips18', 30)" class="i">sb</span><span class="o">:</span><span onmouseout="hideTip(event, 'fstips19', 31)" onmouseover="showTip(event, 'fstips19', 31)" class="i">StringBuilder</span>) (<span onmouseout="hideTip(event, 'fstips20', 32)" onmouseover="showTip(event, 'fstips20', 32)" class="i">s</span><span class="o">:</span><span onmouseout="hideTip(event, 'fstips21', 33)" onmouseover="showTip(event, 'fstips21', 33)" class="i">string</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fstips18', 34)" onmouseover="showTip(event, 'fstips18', 34)" class="i">sb</span><span class="o">.</span><span onmouseout="hideTip(event, 'fstips22', 35)" onmouseover="showTip(event, 'fstips22', 35)" class="i">Append</span>(<span onmouseout="hideTip(event, 'fstips20', 36)" onmouseover="showTip(event, 'fstips20', 36)" class="i">s</span>)
<span class="l">15: </span><span class="k">let</span> <span onmouseout="hideTip(event, 'fstips23', 37)" onmouseover="showTip(event, 'fstips23', 37)" class="i">concat</span> <span onmouseout="hideTip(event, 'fstips24', 38)" onmouseover="showTip(event, 'fstips24', 38)" class="i">list</span> <span class="o">=</span> <span onmouseout="hideTip(event, 'fstips15', 39)" onmouseover="showTip(event, 'fstips15', 39)" class="i">Seq</span><span class="o">.</span><span onmouseout="hideTip(event, 'fstips16', 40)" onmouseover="showTip(event, 'fstips16', 40)" class="i">fold</span> <span onmouseout="hideTip(event, 'fstips17', 41)" onmouseover="showTip(event, 'fstips17', 41)" class="i">SBCat</span> (<span class="k">new</span> <span onmouseout="hideTip(event, 'fstips19', 42)" onmouseover="showTip(event, 'fstips19', 42)" class="i">StringBuilder</span>()) <span onmouseout="hideTip(event, 'fstips24', 43)" onmouseover="showTip(event, 'fstips24', 43)" class="i">list</span><a target="_blank" class="fssniplink" href="http://tomasp.net/fswebsnippets">F# Web Snippets</a>
</pre>


<!-- HTML code for ToolTips -->
<div class="tip" id="fstips1">namespace System<br /></div>
<div class="tip" id="fstips2">namespace System.Text<br /></div>
<div class="tip" id="fstips3">module Seq<br /><br />from Microsoft.FSharp.Collections<br /></div>
<div class="tip" id="fstips4">val fold : ('a -&gt; 'b -&gt; 'a) -&gt; 'a -&gt; seq&lt;'b&gt; -&gt; 'a<br /><br />Full name: Functions7.Seq.fold<br /></div>
<div class="tip" id="fstips5">val foldingFunction : ('a -&gt; 'b -&gt; 'a)<br /></div>
<div class="tip" id="fstips6">val initialResult : 'a<br /></div>
<div class="tip" id="fstips7">Multiple items<br />val list : seq&lt;'b&gt;<br /><br />&#160;&#160;type: seq&lt;'b&gt;<br />&#160;&#160;inherits: Collections.IEnumerable<br /><br /><br />--------------------<br /><br />type 'T list = List&lt;'T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.list&lt;_&gt;<br /><br />&#160;&#160;type: 'T list<br />&#160;&#160;implements: Collections.IStructuralEquatable<br />&#160;&#160;implements: IComparable&lt;List&lt;'T&gt;&gt;<br />&#160;&#160;implements: IComparable<br />&#160;&#160;implements: Collections.IStructuralComparable<br />&#160;&#160;implements: Collections.Generic.IEnumerable&lt;'T&gt;<br />&#160;&#160;implements: Collections.IEnumerable<br /></div>
<div class="tip" id="fstips8">val mutable result : 'a<br /></div>
<div class="tip" id="fstips9">val item : 'b<br /></div>
<div class="tip" id="fstips10">val add : int -&gt; int -&gt; int<br /><br />Full name: Functions7.add<br /></div>
<div class="tip" id="fstips11">val x : int<br /><br />&#160;&#160;type: int<br />&#160;&#160;implements: IComparable<br />&#160;&#160;implements: IFormattable<br />&#160;&#160;implements: IConvertible<br />&#160;&#160;implements: IComparable&lt;int&gt;<br />&#160;&#160;implements: IEquatable&lt;int&gt;<br />&#160;&#160;inherits: ValueType<br /></div>
<div class="tip" id="fstips12">val y : int<br /><br />&#160;&#160;type: int<br />&#160;&#160;implements: IComparable<br />&#160;&#160;implements: IFormattable<br />&#160;&#160;implements: IConvertible<br />&#160;&#160;implements: IComparable&lt;int&gt;<br />&#160;&#160;implements: IEquatable&lt;int&gt;<br />&#160;&#160;inherits: ValueType<br /></div>
<div class="tip" id="fstips13">val sum : seq&lt;int&gt; -&gt; int<br /><br />Full name: Functions7.sum<br /></div>
<div class="tip" id="fstips14">Multiple items<br />val list : seq&lt;int&gt;<br /><br />&#160;&#160;type: seq&lt;int&gt;<br />&#160;&#160;inherits: Collections.IEnumerable<br /><br /><br />--------------------<br /><br />type 'T list = List&lt;'T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.list&lt;_&gt;<br /><br />&#160;&#160;type: 'T list<br />&#160;&#160;implements: Collections.IStructuralEquatable<br />&#160;&#160;implements: IComparable&lt;List&lt;'T&gt;&gt;<br />&#160;&#160;implements: IComparable<br />&#160;&#160;implements: Collections.IStructuralComparable<br />&#160;&#160;implements: Collections.Generic.IEnumerable&lt;'T&gt;<br />&#160;&#160;implements: Collections.IEnumerable<br /></div>
<div class="tip" id="fstips15">Multiple items<br />module Seq<br /><br />from Functions7<br /><br />--------------------<br /><br />module Seq<br /><br />from Microsoft.FSharp.Collections<br /></div>
<div class="tip" id="fstips16">Multiple items<br />val fold : ('a -&gt; 'b -&gt; 'a) -&gt; 'a -&gt; seq&lt;'b&gt; -&gt; 'a<br /><br />Full name: Functions7.Seq.fold<br /><br />--------------------<br /><br />val fold : ('State -&gt; 'T -&gt; 'State) -&gt; 'State -&gt; seq&lt;'T&gt; -&gt; 'State<br /><br />Full name: Microsoft.FSharp.Collections.Seq.fold<br /></div>
<div class="tip" id="fstips17">val SBCat : StringBuilder -&gt; string -&gt; StringBuilder<br /><br />Full name: Functions7.SBCat<br /></div>
<div class="tip" id="fstips18">val sb : StringBuilder<br /><br />&#160;&#160;type: StringBuilder<br />&#160;&#160;implements: Runtime.Serialization.ISerializable<br /></div>
<div class="tip" id="fstips19">type StringBuilder =<br />&#160;&#160;class<br />&#160;&#160;&#160;&#160;new : unit -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;new : int -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;new : string -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;new : string * int -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;new : string * int * int * int -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;new : int * int -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Append : string -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Append : bool -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Append : System.SByte -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Append : System.Byte -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Append : char -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Append : int16 -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Append : int -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Append : int64 -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Append : float32 -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Append : float -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Append : decimal -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Append : uint16 -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Append : uint32 -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Append : uint64 -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Append : obj -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Append : char [] -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Append : char * int -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Append : char [] * int * int -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Append : string * int * int -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member AppendFormat : string * obj -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member AppendFormat : string * obj [] -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member AppendFormat : string * obj * obj -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member AppendFormat : System.IFormatProvider * string * obj [] -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member AppendFormat : string * obj * obj * obj -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member AppendLine : unit -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member AppendLine : string -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Capacity : int with get, set<br />&#160;&#160;&#160;&#160;member Chars : int -&gt; char with get, set<br />&#160;&#160;&#160;&#160;member CopyTo : int * char [] * int * int -&gt; unit<br />&#160;&#160;&#160;&#160;member EnsureCapacity : int -&gt; int<br />&#160;&#160;&#160;&#160;member Equals : System.Text.StringBuilder -&gt; bool<br />&#160;&#160;&#160;&#160;member Insert : int * string -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Insert : int * bool -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Insert : int * System.SByte -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Insert : int * System.Byte -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Insert : int * int16 -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Insert : int * char -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Insert : int * char [] -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Insert : int * int -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Insert : int * int64 -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Insert : int * float32 -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Insert : int * float -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Insert : int * decimal -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Insert : int * uint16 -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Insert : int * uint32 -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Insert : int * uint64 -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Insert : int * obj -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Insert : int * string * int -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Insert : int * char [] * int * int -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Length : int with get, set<br />&#160;&#160;&#160;&#160;member MaxCapacity : int<br />&#160;&#160;&#160;&#160;member Remove : int * int -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Replace : string * string -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Replace : char * char -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Replace : string * string * int * int -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member Replace : char * char * int * int -&gt; System.Text.StringBuilder<br />&#160;&#160;&#160;&#160;member ToString : unit -&gt; string<br />&#160;&#160;&#160;&#160;member ToString : int * int -&gt; string<br />&#160;&#160;end<br /><br />Full name: System.Text.StringBuilder<br /><br />&#160;&#160;type: StringBuilder<br />&#160;&#160;implements: Runtime.Serialization.ISerializable<br /></div>
<div class="tip" id="fstips20">val s : string<br /><br />&#160;&#160;type: string<br />&#160;&#160;implements: IComparable<br />&#160;&#160;implements: ICloneable<br />&#160;&#160;implements: IConvertible<br />&#160;&#160;implements: IComparable&lt;string&gt;<br />&#160;&#160;implements: seq&lt;char&gt;<br />&#160;&#160;implements: Collections.IEnumerable<br />&#160;&#160;implements: IEquatable&lt;string&gt;<br /></div>
<div class="tip" id="fstips21">Multiple items<br />val string : 'T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br /><br />type string = String<br /><br />Full name: Microsoft.FSharp.Core.string<br /><br />&#160;&#160;type: string<br />&#160;&#160;implements: IComparable<br />&#160;&#160;implements: ICloneable<br />&#160;&#160;implements: IConvertible<br />&#160;&#160;implements: IComparable&lt;string&gt;<br />&#160;&#160;implements: seq&lt;char&gt;<br />&#160;&#160;implements: Collections.IEnumerable<br />&#160;&#160;implements: IEquatable&lt;string&gt;<br /></div>
<div class="tip" id="fstips22">Multiple overloads<br />StringBuilder.Append(value: char []) : StringBuilder<br />StringBuilder.Append(value: obj) : StringBuilder<br />StringBuilder.Append(value: uint64) : StringBuilder<br />StringBuilder.Append(value: uint32) : StringBuilder<br />StringBuilder.Append(value: uint16) : StringBuilder<br />StringBuilder.Append(value: decimal) : StringBuilder<br />StringBuilder.Append(value: float) : StringBuilder<br />StringBuilder.Append(value: float32) : StringBuilder<br />StringBuilder.Append(value: int64) : StringBuilder<br />StringBuilder.Append(value: int) : StringBuilder<br />&#160;&#160;&#160;<em>(+9 other overloads)</em><br /></div>
<div class="tip" id="fstips23">val concat : seq&lt;string&gt; -&gt; StringBuilder<br /><br />Full name: Functions7.concat<br /></div>
<div class="tip" id="fstips24">Multiple items<br />val list : seq&lt;string&gt;<br /><br />&#160;&#160;type: seq&lt;string&gt;<br />&#160;&#160;inherits: Collections.IEnumerable<br /><br /><br />--------------------<br /><br />type 'T list = List&lt;'T&gt;<br /><br />Full name: Microsoft.FSharp.Collections.list&lt;_&gt;<br /><br />&#160;&#160;type: 'T list<br />&#160;&#160;implements: Collections.IStructuralEquatable<br />&#160;&#160;implements: IComparable&lt;List&lt;'T&gt;&gt;<br />&#160;&#160;implements: IComparable<br />&#160;&#160;implements: Collections.IStructuralComparable<br />&#160;&#160;implements: Collections.Generic.IEnumerable&lt;'T&gt;<br />&#160;&#160;implements: Collections.IEnumerable<br /></div>
</body></html>
