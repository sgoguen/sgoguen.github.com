<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"> 
<html xmlns="http://www.w3.org/1999/xhtml">
<head><link rel="stylesheet" type="text/css" href="style.css" />
<script type="text/javascript" src="tips.js"></script></head><body>
<pre class="fssnip">
<span class="l"> 1: </span><span class="k">open</span> <span onmouseout="hideTip(event, 'fstips1', 1)" onmouseover="showTip(event, 'fstips1', 1)" class="i">System</span>
<span class="l"> 2: </span>
<span class="l"> 3: </span><span class="c">//</span><span class="c"> </span><span class="c">A</span><span class="c"> </span><span class="c">Record</span><span class="c"> </span><span class="c">Type</span>
<span class="l"> 4: </span><span class="k">type</span> <span onmouseout="hideTip(event, 'fstips2', 2)" onmouseover="showTip(event, 'fstips2', 2)" class="i">stooge</span> <span class="o">=</span> { <span onmouseout="hideTip(event, 'fstips3', 3)" onmouseover="showTip(event, 'fstips3', 3)" class="i">name</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fstips4', 4)" onmouseover="showTip(event, 'fstips4', 4)" class="i">string</span>; <span onmouseout="hideTip(event, 'fstips5', 5)" onmouseover="showTip(event, 'fstips5', 5)" class="i">salary</span><span class="o">:</span> <span onmouseout="hideTip(event, 'fstips6', 6)" onmouseover="showTip(event, 'fstips6', 6)" class="i">int</span> }
<span class="l"> 5: </span>
<span class="l"> 6: </span><span class="c">//</span><span class="c"> </span><span class="c">Let's</span><span class="c"> </span><span class="c">define</span><span class="c"> </span><span class="c">a</span><span class="c"> </span><span class="c">list</span>
<span class="l"> 7: </span><span class="k">let</span> <span onmouseout="hideTip(event, 'fstips7', 7)" onmouseover="showTip(event, 'fstips7', 7)" class="i">stooges</span> <span class="o">=</span> [
<span class="l"> 8: </span>    { <span class="i">name</span><span class="o">=</span><span class="s">&quot;</span><span class="s">Moe</span><span class="s">&quot;</span>; <span class="i">salary</span><span class="o">=</span><span class="n">200000</span> }
<span class="l"> 9: </span>    { <span class="i">name</span><span class="o">=</span><span class="s">&quot;</span><span class="s">Curly</span><span class="s">&quot;</span>; <span class="i">salary</span><span class="o">=</span><span class="n">40000</span> }
<span class="l">10: </span>    { <span class="i">name</span><span class="o">=</span><span class="s">&quot;</span><span class="s">Larry</span><span class="s">&quot;</span>; <span class="i">salary</span><span class="o">=</span><span class="n">40000</span> }
<span class="l">11: </span>  ]
<span class="l">12: </span>
<span class="l">13: </span><span class="c">//</span><span class="c"> </span><span class="c">We</span><span class="c"> </span><span class="c">can</span><span class="c"> </span><span class="c">&quot;deconstruct&quot;</span><span class="c"> </span><span class="c">lists</span>
<span class="l">14: </span><span class="k">let</span> (<span onmouseout="hideTip(event, 'fstips8', 8)" onmouseover="showTip(event, 'fstips8', 8)" class="i">boss</span><span class="o">::</span><span onmouseout="hideTip(event, 'fstips9', 9)" onmouseover="showTip(event, 'fstips9', 9)" class="i">knuckleheads</span>) <span class="o">=</span> <span onmouseout="hideTip(event, 'fstips7', 10)" onmouseover="showTip(event, 'fstips7', 10)" class="i">stooges</span>
<span class="l">15: </span><span class="k">let</span> (<span onmouseout="hideTip(event, 'fstips10', 11)" onmouseover="showTip(event, 'fstips10', 11)" class="i">Moe</span><span class="o">::</span><span onmouseout="hideTip(event, 'fstips11', 12)" onmouseover="showTip(event, 'fstips11', 12)" class="i">Curly</span><span class="o">::</span><span onmouseout="hideTip(event, 'fstips12', 13)" onmouseover="showTip(event, 'fstips12', 13)" class="i">Larry</span><span class="o">::</span>[]) <span class="o">=</span> <span onmouseout="hideTip(event, 'fstips7', 14)" onmouseover="showTip(event, 'fstips7', 14)" class="i">stooges</span>
<span class="l">16: </span>
<span class="l">17: </span><a target="_blank" class="fssniplink" href="http://tomasp.net/fswebsnippets">F# Web Snippets</a>
</pre>


<!-- HTML code for ToolTips -->
<div class="tip" id="fstips1">namespace System<br /></div>
<div class="tip" id="fstips2">type stooge =<br />&#160;&#160;{name: string;<br />&#160;&#160;&#160;salary: int;}<br /><br />Full name: Lists.stooge<br /><br />&#160;&#160;type: stooge<br />&#160;&#160;implements: IEquatable&lt;stooge&gt;<br />&#160;&#160;implements: Collections.IStructuralEquatable<br />&#160;&#160;implements: IComparable&lt;stooge&gt;<br />&#160;&#160;implements: IComparable<br />&#160;&#160;implements: Collections.IStructuralComparable<br /></div>
<div class="tip" id="fstips3">stooge.name: string<br /></div>
<div class="tip" id="fstips4">Multiple items<br />val string : 'T -&gt; string<br /><br />Full name: Microsoft.FSharp.Core.Operators.string<br /><br />--------------------<br /><br />type string = String<br /><br />Full name: Microsoft.FSharp.Core.string<br /><br />&#160;&#160;type: string<br />&#160;&#160;implements: IComparable<br />&#160;&#160;implements: ICloneable<br />&#160;&#160;implements: IConvertible<br />&#160;&#160;implements: IComparable&lt;string&gt;<br />&#160;&#160;implements: seq&lt;char&gt;<br />&#160;&#160;implements: Collections.IEnumerable<br />&#160;&#160;implements: IEquatable&lt;string&gt;<br /></div>
<div class="tip" id="fstips5">stooge.salary: int<br /></div>
<div class="tip" id="fstips6">Multiple items<br />val int : 'T -&gt; int (requires member op_Explicit)<br /><br />Full name: Microsoft.FSharp.Core.Operators.int<br /><br />--------------------<br /><br />type int&lt;'Measure&gt; = int<br /><br />Full name: Microsoft.FSharp.Core.int&lt;_&gt;<br /><br />&#160;&#160;type: int&lt;'Measure&gt;<br />&#160;&#160;implements: IComparable<br />&#160;&#160;implements: IConvertible<br />&#160;&#160;implements: IFormattable<br />&#160;&#160;implements: IComparable&lt;int&lt;'Measure&gt;&gt;<br />&#160;&#160;implements: IEquatable&lt;int&lt;'Measure&gt;&gt;<br />&#160;&#160;inherits: ValueType<br /><br /><br />--------------------<br /><br />type int = int32<br /><br />Full name: Microsoft.FSharp.Core.int<br /><br />&#160;&#160;type: int<br />&#160;&#160;implements: IComparable<br />&#160;&#160;implements: IFormattable<br />&#160;&#160;implements: IConvertible<br />&#160;&#160;implements: IComparable&lt;int&gt;<br />&#160;&#160;implements: IEquatable&lt;int&gt;<br />&#160;&#160;inherits: ValueType<br /></div>
<div class="tip" id="fstips7">val stooges : stooge list<br /><br />Full name: Lists.stooges<br /><br />&#160;&#160;type: stooge list<br />&#160;&#160;implements: Collections.IStructuralEquatable<br />&#160;&#160;implements: IComparable&lt;List&lt;stooge&gt;&gt;<br />&#160;&#160;implements: IComparable<br />&#160;&#160;implements: Collections.IStructuralComparable<br />&#160;&#160;implements: Collections.Generic.IEnumerable&lt;stooge&gt;<br />&#160;&#160;implements: Collections.IEnumerable<br /></div>
<div class="tip" id="fstips8">val boss : stooge<br /><br />Full name: Lists.boss<br /><br />&#160;&#160;type: stooge<br />&#160;&#160;implements: IEquatable&lt;stooge&gt;<br />&#160;&#160;implements: Collections.IStructuralEquatable<br />&#160;&#160;implements: IComparable&lt;stooge&gt;<br />&#160;&#160;implements: IComparable<br />&#160;&#160;implements: Collections.IStructuralComparable<br /></div>
<div class="tip" id="fstips9">val knuckleheads : stooge list<br /><br />Full name: Lists.knuckleheads<br /><br />&#160;&#160;type: stooge list<br />&#160;&#160;implements: Collections.IStructuralEquatable<br />&#160;&#160;implements: IComparable&lt;List&lt;stooge&gt;&gt;<br />&#160;&#160;implements: IComparable<br />&#160;&#160;implements: Collections.IStructuralComparable<br />&#160;&#160;implements: Collections.Generic.IEnumerable&lt;stooge&gt;<br />&#160;&#160;implements: Collections.IEnumerable<br /></div>
<div class="tip" id="fstips10">val Moe : stooge<br /><br />Full name: Lists.Moe<br /><br />&#160;&#160;type: stooge<br />&#160;&#160;implements: IEquatable&lt;stooge&gt;<br />&#160;&#160;implements: Collections.IStructuralEquatable<br />&#160;&#160;implements: IComparable&lt;stooge&gt;<br />&#160;&#160;implements: IComparable<br />&#160;&#160;implements: Collections.IStructuralComparable<br /></div>
<div class="tip" id="fstips11">val Curly : stooge<br /><br />Full name: Lists.Curly<br /><br />&#160;&#160;type: stooge<br />&#160;&#160;implements: IEquatable&lt;stooge&gt;<br />&#160;&#160;implements: Collections.IStructuralEquatable<br />&#160;&#160;implements: IComparable&lt;stooge&gt;<br />&#160;&#160;implements: IComparable<br />&#160;&#160;implements: Collections.IStructuralComparable<br /></div>
<div class="tip" id="fstips12">val Larry : stooge<br /><br />Full name: Lists.Larry<br /><br />&#160;&#160;type: stooge<br />&#160;&#160;implements: IEquatable&lt;stooge&gt;<br />&#160;&#160;implements: Collections.IStructuralEquatable<br />&#160;&#160;implements: IComparable&lt;stooge&gt;<br />&#160;&#160;implements: IComparable<br />&#160;&#160;implements: Collections.IStructuralComparable<br /></div>
</body></html>
